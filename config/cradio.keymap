/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        Back {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        SysAd {
            bindings = <&sl 4>;
            key-positions = <30 31 32 33 31>;
        };
    };

    behaviors {
        Excl_mod: Excl_mod {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_MOD";
            bindings =
                <&kp EXCL>,
                <&kp PLUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
       &kp Q  &kp W  &kp E  &kp R   &kp T         &kp Y  &kp U      &kp I    &kp O           &kp P
       &kp A  &kp S  &kp D  &kp F   &kp G         &kp H  &kp J      &kp K    &kp L         &kp SQT
&mt LSHIFT Z  &kp X  &kp C  &kp V   &kp B    &mt N SEMI  &kp M  &kp COMMA  &kp DOT  &mt LSHIFT RET
                            &sl 1  &trans     &kp SPACE  &sl 2
            >;
        };

        Number {
            bindings = <
   &kp N1     &kp N2     &kp N3     &kp N4     &kp N5       &kp N6       &kp N7    &kp N8         &kp N9    &kp N0
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp PAGE_UP    &kp UP  &kp PAGE_DOWN  &kp BSPC
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE     &kp LEFT  &kp DOWN      &kp RIGHT   &kp DEL
                                    &trans   &kp LGUI     &kp RGUI       &trans
            >;
        };

        Symbol {
            bindings = <
&Excl_mod  &kp RA(NUMBER_2)   &kp HASH  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
&kp SPACE         &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE     &trans
&kp SPACE         &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE     &trans
                                           &trans  &kp SPACE    &kp SPACE     &trans
            >;
        };

        FUN {
            bindings = <
   &kp F1     &kp F2     &kp F3     &kp F4     &kp F5       &kp F6     &kp F7     &kp F8     &kp F9    &kp F10
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
&kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE  &kp SPACE
                                 &kp SPACE  &kp SPACE    &kp SPACE  &kp SPACE
            >;
        };

        SysAd {
            bindings = <
      &trans        &trans        &trans        &trans      &trans    &trans  &trans  &trans  &trans  &trans
      &trans        &trans        &trans        &trans      &trans    &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans
                                                &trans      &trans    &trans  &trans
            >;
        };
    };
};
